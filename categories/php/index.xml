<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>PHP on &lt;/pwntester&gt;</title>
    <link>http://www.pwntester.com/categories/php/</link>
    <description>Recent content in PHP on &lt;/pwntester&gt;</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 06 Apr 2014 10:29:00 +0000</lastBuildDate>
    
	<atom:link href="http://www.pwntester.com/categories/php/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>NuitDuHack 2014 Web Write Ups</title>
      <link>http://www.pwntester.com/blog/2014/04/06/nuitduhack-2014-web-write-ups/</link>
      <pubDate>Sun, 06 Apr 2014 10:29:00 +0000</pubDate>
      
      <guid>http://www.pwntester.com/blog/2014/04/06/nuitduhack-2014-web-write-ups/</guid>
      <description>Web 100: Abitol This is a simple web app where you can register and login to see an articles page, a photo gallery, a flag page and an admin contact page.
Visiting the flag page give us a Nice try, did you really think it would be that easy? ;) but the photo gallery is vulnerable to XSS:
http://abitbol.nuitduhack.com/zoom.php?image=1%3E%3Cscript%3Ealert%281%29%3C/script%3E
Now, we dont know how the admin contact will be visualized in the viewer page, but we can try to send him a message with an iframe pointing to the vulnerable page so we can send his session ID to our cookie catcher or use XHR to request the flag.</description>
    </item>
    
    <item>
      <title>#hackyou2014 Web400 write-up</title>
      <link>http://www.pwntester.com/blog/2014/01/17/hackyou2014-web400-write-up/</link>
      <pubDate>Fri, 17 Jan 2014 13:03:00 +0000</pubDate>
      
      <guid>http://www.pwntester.com/blog/2014/01/17/hackyou2014-web400-write-up/</guid>
      <description>I did not solve this level during the CTF, but found it so interesting reading Xelenonz write-up that I couldnt help trying it myself just for the fun and since this blog is my personal notes, I decided to write it here for future reference, but all credits go to Xelenonz.
We are given the code of a Image hostig web app. Reading the code we see how it handle the requests:</description>
    </item>
    
    <item>
      <title>#hackyou2014 Web100 write-up</title>
      <link>http://www.pwntester.com/blog/2014/01/15/hackyou2014-web100-write-up/</link>
      <pubDate>Wed, 15 Jan 2014 23:52:00 +0000</pubDate>
      
      <guid>http://www.pwntester.com/blog/2014/01/15/hackyou2014-web100-write-up/</guid>
      <description>In this level we are presented with some logos we can vote.
If we look at the source code we can see an interesting comment:
... &amp;lt;!-- TODO: remove index.phps --&amp;gt; ...  We can grab the source code:
&amp;lt;?php include &#39;db.php&#39;; session_start(); if (!isset($_SESSION[&#39;login&#39;])) { $_SESSION[&#39;login&#39;] = &#39;guest&#39;.mt_rand(1e5, 1e6); } $login = $_SESSION[&#39;login&#39;]; if (isset($_POST[&#39;submit&#39;])) { if (!isset($_POST[&#39;id&#39;], $_POST[&#39;vote&#39;]) || !is_numeric($_POST[&#39;id&#39;])) die(&#39;Hacking attempt!&#39;); $id = $_POST[&#39;id&#39;]; $vote = (int)$_POST[&#39;vote&#39;]; if ($vote &amp;gt; 5 || $vote &amp;lt; 1) $vote = 1; $q = mysql_query(&amp;quot;INSERT INTO vote VALUES ({$id}, {$vote}, &#39;{$login}&#39;)&amp;quot;); $q = mysql_query(&amp;quot;SELECT id FROM vote WHERE user = &#39;{$login}&#39; GROUP BY id&amp;quot;); echo &#39;&amp;lt;p&amp;gt;&amp;lt;b&amp;gt;Thank you!</description>
    </item>
    
    <item>
      <title>#hackyou2014 Web200 write-up</title>
      <link>http://www.pwntester.com/blog/2014/01/15/hackyou2014-web200-write-up/</link>
      <pubDate>Wed, 15 Jan 2014 22:35:00 +0000</pubDate>
      
      <guid>http://www.pwntester.com/blog/2014/01/15/hackyou2014-web200-write-up/</guid>
      <description>In this level we are presented with a typical Snake game.
I spent a couple of hours deofuscating the javascript code until I was capable of submitting any score. Nice but useless. I also found out that I could fake the IP associated to the score using the X-Forwarded-For header. That was pretty much it until the CTF was about to finish when I was given the hint: &amp;ldquo;../&amp;rdquo;. I could use it to locate a LFI vulnerability that was affecting the index.</description>
    </item>
    
    <item>
      <title>#hackyou2014 Web300 write-up</title>
      <link>http://www.pwntester.com/blog/2014/01/15/hackyou2014-web300-write-up/</link>
      <pubDate>Wed, 15 Jan 2014 18:33:00 +0000</pubDate>
      
      <guid>http://www.pwntester.com/blog/2014/01/15/hackyou2014-web300-write-up/</guid>
      <description>In this [level]() we were presented with an online shop:
The task name was &amp;ldquo;AngryBird&amp;rdquo; and this was very relevant to solve the challange! It actually comes down to two parts:
 Finding a hidden admin area Exploiting a blind SQLi to get credentials  Finding the hidden admin area We were given the following description:
 Some web-developers still host their sites on Windows platform, and think that it is secure enough</description>
    </item>
    
  </channel>
</rss>