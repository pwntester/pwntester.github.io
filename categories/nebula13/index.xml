<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>nebula13 on &lt;/pwntester&gt;</title>
    <link>http://pwntester.com/categories/nebula13/</link>
    <description>Recent content in nebula13 on &lt;/pwntester&gt;</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 25 Nov 2013 14:16:00 +0000</lastBuildDate>
    
	<atom:link href="http://pwntester.com/categories/nebula13/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Nebula level13 write-up</title>
      <link>http://pwntester.com/blog/2013/11/25/nebula-level13-write-up/</link>
      <pubDate>Mon, 25 Nov 2013 14:16:00 +0000</pubDate>
      
      <guid>http://pwntester.com/blog/2013/11/25/nebula-level13-write-up/</guid>
      <description>In Level13 we are given the following code:
#include &amp;lt;stdlib.h&amp;gt; #include &amp;lt;unistd.h&amp;gt; #include &amp;lt;stdio.h&amp;gt; #include &amp;lt;sys/types.h&amp;gt; #include &amp;lt;string.h&amp;gt; #define FAKEUID 1000 int main(int argc, char **argv, char **envp) { int c; char token[256]; if(getuid() != FAKEUID) { printf(&amp;quot;Security failure detected. UID %d started us, we expect %d\n&amp;quot;, getuid(), FAKEUID); printf(&amp;quot;The system administrators will be notified of this violation\n&amp;quot;); exit(EXIT_FAILURE); } // snip, sorry :) printf(&amp;quot;your token is %s\n&amp;quot;, token); }  Well the code is missing the token but it is clear that is reading the user UID anc comparing it with 1000, so the only way to get our token is to fake that our UID is 1000.</description>
    </item>
    
  </channel>
</rss>