<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Web on &lt;/pwntester&gt;</title>
    <link>http://www.pwntester.com/tags/web/</link>
    <description>Recent content in Web on &lt;/pwntester&gt;</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 06 Apr 2014 10:29:00 +0000</lastBuildDate>
    
	<atom:link href="http://www.pwntester.com/tags/web/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>NuitDuHack 2014 Web Write Ups</title>
      <link>http://www.pwntester.com/blog/2014/04/06/nuitduhack-2014-web-write-ups/</link>
      <pubDate>Sun, 06 Apr 2014 10:29:00 +0000</pubDate>
      
      <guid>http://www.pwntester.com/blog/2014/04/06/nuitduhack-2014-web-write-ups/</guid>
      <description>Web 100: Abitol This is a simple web app where you can register and login to see an articles page, a photo gallery, a flag page and an admin contact page.
Visiting the flag page give us a Nice try, did you really think it would be that easy? ;) but the photo gallery is vulnerable to XSS:
http://abitbol.nuitduhack.com/zoom.php?image=1%3E%3Cscript%3Ealert%281%29%3C/script%3E
Now, we dont know how the admin contact will be visualized in the viewer page, but we can try to send him a message with an iframe pointing to the vulnerable page so we can send his session ID to our cookie catcher or use XHR to request the flag.</description>
    </item>
    
    <item>
      <title>Olympic CTF CURLing500 Write Up</title>
      <link>http://www.pwntester.com/blog/2014/02/14/olympic-ctf-curling500-write-up/</link>
      <pubDate>Fri, 14 Feb 2014 16:29:00 +0000</pubDate>
      
      <guid>http://www.pwntester.com/blog/2014/02/14/olympic-ctf-curling500-write-up/</guid>
      <description>We didnt have time to finish this task during the game since we decided to finish Freestyle 400 (scored in the last minute) but as I foound out later, we were close to finish it.
In this level we were presented with a login form vulnerable to user enumeration. It was easy to see that admin was a valid user but we could not guess the password. After trying with other &amp;ldquo;normal&amp;rdquo; accounts like guest, dev and so on, we found that debug was a valid account and the password was debug.</description>
    </item>
    
    <item>
      <title>Olympic CTF CURLing tasks</title>
      <link>http://www.pwntester.com/blog/2014/02/09/olympic-ctf-curling-tasks/</link>
      <pubDate>Sun, 09 Feb 2014 16:54:00 +0000</pubDate>
      
      <guid>http://www.pwntester.com/blog/2014/02/09/olympic-ctf-curling-tasks/</guid>
      <description>I had the honour to participate with int3pids in the #Olympic CTF and these are the write ups of the Web tasks we solved.
CURLing 200: Xnginx In this level we were presented with a simple web site where we could check some news
First thing to notice is that the news URL is vulnerable to path transversal:
http://109.233.61.11:27280/news/?f=31-12-2013  http://109.233.61.11:27280/news/?f=../../../../../etc/passwd  Since the name of the task was xnginx I looked for the nginx configuration file:</description>
    </item>
    
    <item>
      <title>#hackyou2014 Web200 write-up</title>
      <link>http://www.pwntester.com/blog/2014/01/15/hackyou2014-web200-write-up/</link>
      <pubDate>Wed, 15 Jan 2014 22:35:00 +0000</pubDate>
      
      <guid>http://www.pwntester.com/blog/2014/01/15/hackyou2014-web200-write-up/</guid>
      <description>In this level we are presented with a typical Snake game.
I spent a couple of hours deofuscating the javascript code until I was capable of submitting any score. Nice but useless. I also found out that I could fake the IP associated to the score using the X-Forwarded-For header. That was pretty much it until the CTF was about to finish when I was given the hint: &amp;ldquo;../&amp;rdquo;. I could use it to locate a LFI vulnerability that was affecting the index.</description>
    </item>
    
    <item>
      <title>#hackyou2014 Web300 write-up</title>
      <link>http://www.pwntester.com/blog/2014/01/15/hackyou2014-web300-write-up/</link>
      <pubDate>Wed, 15 Jan 2014 18:33:00 +0000</pubDate>
      
      <guid>http://www.pwntester.com/blog/2014/01/15/hackyou2014-web300-write-up/</guid>
      <description>In this [level]() we were presented with an online shop:
The task name was &amp;ldquo;AngryBird&amp;rdquo; and this was very relevant to solve the challange! It actually comes down to two parts:
 Finding a hidden admin area Exploiting a blind SQLi to get credentials  Finding the hidden admin area We were given the following description:
 Some web-developers still host their sites on Windows platform, and think that it is secure enough</description>
    </item>
    
  </channel>
</rss>