<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>OGNL on &lt;/pwntester&gt;</title>
    <link>http://pwntester.com/tags/ognl/</link>
    <description>Recent content in OGNL on &lt;/pwntester&gt;</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 21 Jan 2014 19:10:00 +0000</lastBuildDate>
    
	<atom:link href="http://pwntester.com/tags/ognl/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Struts 2 devmode: An OGNL backdoor</title>
      <link>http://pwntester.com/blog/2014/01/21/struts-2-devmode-an-ognl-backdoor/</link>
      <pubDate>Tue, 21 Jan 2014 19:10:00 +0000</pubDate>
      
      <guid>http://pwntester.com/blog/2014/01/21/struts-2-devmode-an-ognl-backdoor/</guid>
      <description>There are many Struts 2 developers familiar with the Struts 2 development mode on which more verbose logs are produced and handy resource reloading is done on a request basis to avoid restarting the server every time we change a property, validator and so on. What it is not so well known (actually it doesnâ€™t even appear in the Struts 2 devmode site) is that it enables a OGNL injection backdoor allowing the developers to check their Value Stacks with ease and from a handy OGNL console or request parameter.</description>
    </item>
    
    <item>
      <title>Time to update your OGNL payloads</title>
      <link>http://pwntester.com/blog/2014/01/20/time-to-update-your-ognl-payloads/</link>
      <pubDate>Mon, 20 Jan 2014 15:39:00 +0000</pubDate>
      
      <guid>http://pwntester.com/blog/2014/01/20/time-to-update-your-ognl-payloads/</guid>
      <description>OGNL is an expression language for getting and setting properties of Java objects, plus other extras such as list projection, selection, lambda expressions and method invocation. So if attackers can provide the OGNL engine with arbitrary OGNL expressions, they will be able to execute arbitrary code on the application server and/or access and modify any value stored in the Struts 2 value stack.
Struts 2 provided an addition layer of protection by disabling static method invocation so that methods like java.</description>
    </item>
    
  </channel>
</rss>